Values used for the training the session 

Training done on original dataset and without weights on different outputs. 
The best model is saved when a the valid accuracy is better than the last. 
The model is also saved when the validation accuracy have not increased in 5 epochs or 50 epochs have trained

folder = Training 8
class = GS1 Form || Material || Colour
num_epochs = 50
batch_size = 64
learning_rate = 0.001
data_split_percent = 0.2

Data used for varification 20.0 % = 1998
Data used for training 80.0 % = 7988

weights files:
    weights_Material_best.pt <-- The model saved when the validation accuracy is the highest. 
    weights_Material_end.pt  <-- The model saved when when the validation accuracy has not increased in 5 epochs or 50 epochs is done

    weights_gs1_best.pt      <-- The model saved when the validation accuracy is the highest. 
    weights_gs1_end.pt       <-- The model saved when when the validation accuracy has not increased in 5 epochs or 50 epochs is done

    weights_Colour_best.pt   <-- The model saved when the validation accuracy is the highest. 
    weights_Colour_end.pt    <-- The model saved when when the validation accuracy has not increased in 5 epochs or 50 epochs is done


CNN model: 
    Sequential(
      (0): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (4): Dropout(p=0, inplace=False)
      )
      (1): Sequential(
        (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (4): Dropout(p=0.0, inplace=False)
      )
      (2): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (4): Dropout(p=0.0, inplace=False)
      )
      (3): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (4): Dropout(p=0.0, inplace=False)
      )
      (4): Flatten(start_dim=1, end_dim=-1)
      (5): Dropout(p=0.5, inplace=False)
      (6): Linear(in_features=27648, out_features=3456, bias=True)
      (7): ReLU(inplace=True)
      (8): BatchNorm1d(3456, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (9): Dropout(p=0.5, inplace=False)
      (10): Linear(in_features=3456, out_features=512, bias=True)
      (11): ReLU(inplace=True)
      (12): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): Linear(in_features=512, out_features=4, bias=True)
    )
